import os
import socket
import requests
from dotenv import load_dotenv

# Load environment variables
load_dotenv()
NVD_API_KEY = os.getenv("NVD_API_KEY")

def scan_ports(target, ports):
    print(f"Scanning {target} for open ports...")
    open_ports = []
    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((target, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def check_vulnerabilities(service, version):
    """
    Query the NVD API for known vulnerabilities.
    """
    url = f"https://services.nvd.nist.gov/rest/json/cves/1.0"
    params = {
        "keyword": f"{service} {version}",
        "resultsPerPage": 5,
    }
    headers = {"apiKey": NVD_API_KEY} if NVD_API_KEY else {}

    response = requests.get(url, params=params, headers=headers)
    if response.status_code == 200:
        data = response.json()
        vulnerabilities = data.get("result", {}).get("CVE_Items", [])
        if vulnerabilities:
            print(f"[ALERT] Found {len(vulnerabilities)} vulnerabilities for {service} {version}:")
            for vuln in vulnerabilities:
                cve_id = vuln["cve"]["CVE_data_meta"]["ID"]
                description = vuln["cve"]["description"]["description_data"][0]["value"]
                print(f"- {cve_id}: {description}")
        else:
            print(f"No known vulnerabilities found for {service} {version}.")
    else:
        print("Failed to query NVD API.")

def main():
    target = input("Enter target IP or hostname: ")
    ports = [21, 22, 80, 443, 8080]  # Common ports to scan

    # Step 1: Scan for open ports
    open_ports = scan_ports(target, ports)
    if open_ports:
        print(f"Open ports on {target}: {open_ports}")
    else:
        print("No open ports found.")
        return

    # Step 2: Check for outdated services (example: SSH)
    service = "OpenSSH"
    version = "7.2"  # Replace with actual version detection logic
    print(f"Checking vulnerabilities for {service} {version}...")
    check_vulnerabilities(service, version)

if __name__ == "__main__":
    main()